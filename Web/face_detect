import cv2
import datetime
def face_detect():
    # Load pre-trained data on face frontals from OpenCV (Haar cascade algorithm)
    face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

    # Function to trigger an alert
    def trigger_alert():
        print("Intrusion Alert! Face Detected!")
        # Add your code to send an email, trigger an alarm, etc.

    # Start video capture from the default camera (0)
    cap = cv2.VideoCapture(0)

    while True:
        # Read the current frame from the video capture
        ret, frame = cap.read()

        # Convert the frame to grayscale (Haar cascade requires grayscale)
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

        # Detect faces in the frame
        faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

        # Draw rectangles around detected faces and trigger alert
        for (x, y, w, h) in faces:
            # Draw rectangle around the face
            cv2.rectangle(frame, (x, y), (x + w, y + h), (255, 0, 0), 2)
            
            # Display the time of detection
            cv2.putText(frame, f"Face detected at {datetime.datetime.now()}", (x, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (255, 0, 0), 2)

            # Trigger intrusion alert
            trigger_alert()

        # Display the frame with detection
        cv2.imshow('Intrusion Detection', frame)

        # Break the loop if 'q' is pressed
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    # Release the capture and close windows
    cap.release()
    cv2.destroyAllWindows()
